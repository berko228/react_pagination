{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","activePage","onPageChange","maxPage","Math","ceil","pages","Array","length","_","i","isPrevDisabled","isNextDisabled","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","setPerPage","setActivePage","pagesTotal","firstItem","lastItem","visibleItems","id","onChange","event","currentTarget","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,WACAC,EACI,EADJA,aAEMC,EAAUC,KAAKC,KAAKN,EAAQC,GAC5BM,EAAQC,MAAMd,KAAK,CAAEe,OAAQL,IAAW,SAACM,EAAGC,GAAJ,OAAUA,EAAI,KACtDC,EAAgC,IAAfV,EACjBW,EAAiBX,IAAeK,EAAME,OAE5C,OACE,qBAAIK,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAAUJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,WACPf,EAAaD,EAAa,IAN9B,oBAYDK,EAAMY,KAAI,SAACC,GAAD,OACT,oBACEN,UAAWC,IAAW,YAAa,CACjCM,OAAQnB,IAAekB,IAF3B,SAME,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACPf,EAAaiB,IALjB,SAQGA,KAVEA,MAcT,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,WACPf,EAAaD,EAAa,IAN9B,wBC3DFoB,EAAQ7B,EAAW,EAAG,IACzB0B,KAAI,SAAAtB,GAAC,qBAAYA,MAEP0B,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgBwB,EAAhB,KACA,EAAoCD,mBAAS,GAA7C,mBAAOtB,EAAP,KAAmBwB,EAAnB,KACMC,EAAatB,KAAKC,KAAKgB,EAAMb,OAASR,GACtC2B,GAAa1B,EAAa,GAAKD,EAAU,EACzC4B,EAAW3B,IAAeyB,EAC5BL,EAAMb,OACNP,EAAaD,EAEX6B,EAAerC,EAAWmC,EAAWC,GAe3C,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBACEA,UAAU,OACV,UAAQ,OAFV,wBAIWZ,EAJX,mBAIgC0B,EAJhC,cAI+CC,EAJ/C,eAI8DP,EAAMb,OAJpE,OAOA,sBAAKK,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,SA9BY,SAACC,GACrBR,GAAYQ,EAAMC,cAAcC,OAChCT,EAAc,IAwBR,UAME,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEd,MAAOsB,EAAMb,OACbR,QAASA,EACTC,WAAYA,EACZC,aA1CmB,SAACiB,GACpBA,GAAQ,GAAKA,EAAOO,GAIxBD,EAAcN,MAuCZ,6BACGU,EAAaX,KAAI,SAACkB,GAAD,OAChB,qBACE,UAAQ,OADV,qBAKGA,IAHIA,YCrEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ca81097d.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  activePage: number,\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  activePage,\n  onPageChange,\n}) => {\n  const maxPage = Math.ceil(total / perPage);\n  const pages = Array.from({ length: maxPage }, (_, i) => i + 1);\n  const isPrevDisabled = activePage === 1;\n  const isNextDisabled = activePage === pages.length;\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: isPrevDisabled,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isPrevDisabled}\n          onClick={() => {\n            onPageChange(activePage - 1);\n          }}\n        >\n          «\n        </a>\n      </li>\n      {pages.map((page) => (\n        <li\n          className={classNames('page-item', {\n            active: activePage === page,\n          })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              onPageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames('page-item', {\n          disabled: isNextDisabled,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isNextDisabled}\n          onClick={() => {\n            onPageChange(activePage + 1);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(3);\n  const [activePage, setActivePage] = useState(1);\n  const pagesTotal = Math.ceil(items.length / perPage);\n  const firstItem = (activePage - 1) * perPage + 1;\n  const lastItem = activePage === pagesTotal\n    ? items.length\n    : activePage * perPage;\n\n  const visibleItems = getNumbers(firstItem, lastItem);\n\n  const handlePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.currentTarget.value);\n    setActivePage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    if (page <= 0 || page > pagesTotal) {\n      return;\n    }\n\n    setActivePage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p\n        className=\"lead\"\n        data-cy=\"info\"\n      >\n        {`Page ${activePage} (items ${firstItem} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        activePage={activePage}\n        onPageChange={handlePageChange}\n      />\n      <ul>\n        {visibleItems.map((item) => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            Item&nbsp;\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}